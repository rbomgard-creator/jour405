x <- 1
y <- 3
z <-3
x <- 1
y <- 2
z <- 3
print("Hello World")
print(Hello World)
print(Hello World)
print("Hello World")
print(42)
17 + 5
x + 5
n <- 15 +5
15 + 5
15 + 5
n <- 20
sqrt(16)
p <- sqrt(16)
y
x
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library("tidyverse")
library("tidyverse")
library("tidyverse")
dplyr::filter(my_data, some_column > 5)
library("tidyverse")
library("tidyverse")
students <- read_csv("https://pos.it/r4ds-students-csv")
read_csv("https://pos.it/r4ds-students-csv")
library(tidyverse)
wh_salaries <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/biden_wh_salaries_2024.csv")
View(wh_salaries)
wh_salaries %>%
summarize(
mean_salary = mean(salary, na.rm = TRUE),
median_salary = median(salary, na.rm = TRUE)
)
wh_salaries %>%
summarize(
mean_salary = mean(salary, na.rm = TRUE),
median_salary = median(salary, na.rm = TRUE)
)
wh_salaries <|
wh_salaries |>
summarize(
mean_salary = mean(salary, na.rm = TRUE),
median_salary = median(salary, na.rm = TRUE)
)
wh_salaries |>
summarize(
mean_salary   = mean(salary, na.rm = TRUE),
median_salary = median(salary, na.rm = TRUE),
min_salary    = min(salary, na.rm = TRUE),
max_salary    = max(salary, na.rm = TRUE)
)
libary(tidyverse)
library(tidyverse)
md_cities <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/md_cities_crime_2019_2020.csv")
md_cities_rates <- md_cities %>%
mutate(
violent_rate_2019 = (violent_2019 / population_2019) * 100000,
property_rate_2019 = (property_2019 / population_2019) * 100000,
violent_rate_2020 = (violent_2020 / population_2020) * 100000,
property_rate_2020 = (property_2020 / population_2020) * 100000
)
View(md_cities)
md_cities_rates <- md_cities %>%
mutate(
violent_rate_2019 = (violent2019 / pop2019) * 100000,
property_rate_2019 = (property2019 / pop2019) * 100000,
violent_rate_2020 = (violent2020 / pop2020) * 100000,
property_rate_2020 = (property2020 / pop2020) * 100000
)
View(md_cities_rates)
md_cities_change <- md_cities_rates %>%
mutate(
violent_pct_change = ((violent_rate_2020 - violent_rate_2019) / violent_rate_2019) * 100,
property_pct_change = ((property_rate_2020 - property_rate_2019) / property_rate_2019) * 100
)
View(md_cities_change)
library(janitor)
library(tidyverse)
spotify_songs <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/spotify_2020.csv")
View(spotify_songs)
spotify_songs %>%
summarize(
mean_danceability = mean(danceability, na.rm = TRUE),
sd_danceability = sd(danceability, na.rm = TRUE)
)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = count), binwidth = 2)
ggplot(spotify_songs, aes(x = danceability)) +
geom_histogram()
ggplot(spotify_songs, aes(x = danceability)) +
geom_histogram() +
geom_vline(aes(xintercept = mean(count)), color = "red", linetype = "dashed", size = 2) +
geom_vline(aes(xintercept = mean(count) - sd(count)), color = "blue", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean(count) + sd(count)), color = "blue", linetype = "dashed", size = 1)
ggplot(spotify_songs, aes(x = danceability)) +
geom_histogram() +
geom_vline(aes(xintercept = mean(danceability)), color = "red", linetype = "dashed", size = 2) +
geom_vline(aes(xintercept = mean(danceability) - sd(danceability)), color = "blue", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean(danceability) + sd(danceabiity)), color = "blue", linetype = "dashed", size = 1)
ggplot(spotify_songs, aes(x = danceability)) +
geom_histogram() +
geom_vline(aes(xintercept = mean(danceability, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean(danceability, na.rm = TRUE) + sd(danceability, na.rm = TRUE)), color = "blue", linetype = "dotted", size = 1) +
geom_vline(aes(xintercept = mean(danceability, na.rm = TRUE) - sd(danceability, na.rm = TRUE)), color = "blue", linetype = "dotted", size = 1)
ggplot(spotify_songs, aes(x = danceability)) +
geom_histogram() +
geom_vline(aes(xintercept = mean(danceability, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean(danceability, na.rm = TRUE) + sd(danceability, na.rm = TRUE)), color = "blue", linetype = "dotted", size = 1) +
geom_vline(aes(xintercept = mean(danceability, na.rm = TRUE) - sd(danceability, na.rm = TRUE)), color = "blue", linetype = "dotted", size = 1)
ggplot(spotify_songs, aes(x = danceability)) +
geom_histogram() +
geom_vline(aes(xintercept = mean(danceability, na.rm = TRUE)), color = "red", linetype = "dashed", size = 1)
